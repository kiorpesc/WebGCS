0 info it worked if it ends with ok
1 verbose cli [ '/home/codio/.nvm/v0.10.25/bin/node',
1 verbose cli   '/home/codio/.nvm/v0.10.25/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'canvas' ]
2 info using npm@1.3.24
3 info using node@v0.10.25
4 verbose cache add [ 'canvas', null ]
5 verbose cache add name=undefined spec="canvas" args=["canvas",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'canvas',
6 verbose parsed url   path: 'canvas',
6 verbose parsed url   href: 'canvas' }
7 silly lockFile 7aa15835-canvas canvas
8 verbose lock canvas /home/codio/.npm/7aa15835-canvas.lock
9 silly lockFile 7aa15835-canvas canvas
10 silly lockFile 7aa15835-canvas canvas
11 verbose addNamed [ 'canvas', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 7328b956-canvas canvas@
14 verbose lock canvas@ /home/codio/.npm/7328b956-canvas.lock
15 silly addNameRange { name: 'canvas', range: '*', hasData: false }
16 verbose url raw canvas
17 verbose url resolving [ 'https://registry.npmjs.org/', './canvas' ]
18 verbose url resolved https://registry.npmjs.org/canvas
19 info trying registry request attempt 1 at 18:30:44
20 http GET https://registry.npmjs.org/canvas
21 http 200 https://registry.npmjs.org/canvas
22 silly registry.get cb [ 200,
22 silly registry.get   { date: 'Wed, 26 Nov 2014 18:30:44 GMT',
22 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
22 silly registry.get     etag: '"4JO31UOYP8WR2VVBYS247RY88"',
22 silly registry.get     'content-type': 'application/json',
22 silly registry.get     'cache-control': 'max-age=60',
22 silly registry.get     'content-length': '62309',
22 silly registry.get     'accept-ranges': 'bytes',
22 silly registry.get     via: '1.1 varnish',
22 silly registry.get     age: '3',
22 silly registry.get     'x-served-by': 'cache-iad2141-IAD',
22 silly registry.get     'x-cache': 'HIT',
22 silly registry.get     'x-cache-hits': '1',
22 silly registry.get     'x-timer': 'S1417026644.629310,VS0,VE0',
22 silly registry.get     vary: 'Accept',
22 silly registry.get     'keep-alive': 'timeout=10, max=50',
22 silly registry.get     connection: 'Keep-Alive' } ]
23 silly addNameRange number 2 { name: 'canvas', range: '*', hasData: true }
24 silly addNameRange versions [ 'canvas',
24 silly addNameRange   [ '0.0.1',
24 silly addNameRange     '0.0.2',
24 silly addNameRange     '0.0.3',
24 silly addNameRange     '0.0.4',
24 silly addNameRange     '0.0.5',
24 silly addNameRange     '0.0.6',
24 silly addNameRange     '0.0.7',
24 silly addNameRange     '0.0.8',
24 silly addNameRange     '0.1.0',
24 silly addNameRange     '0.2.0',
24 silly addNameRange     '0.2.1',
24 silly addNameRange     '0.3.0',
24 silly addNameRange     '0.3.1',
24 silly addNameRange     '0.3.2',
24 silly addNameRange     '0.3.3',
24 silly addNameRange     '0.4.0',
24 silly addNameRange     '0.4.1',
24 silly addNameRange     '0.4.2',
24 silly addNameRange     '0.4.3',
24 silly addNameRange     '0.5.0',
24 silly addNameRange     '0.5.1',
24 silly addNameRange     '0.5.2',
24 silly addNameRange     '0.5.3',
24 silly addNameRange     '0.5.4',
24 silly addNameRange     '0.6.0',
24 silly addNameRange     '0.7.0',
24 silly addNameRange     '0.7.1',
24 silly addNameRange     '0.7.2',
24 silly addNameRange     '0.7.3',
24 silly addNameRange     '0.8.0',
24 silly addNameRange     '0.8.1',
24 silly addNameRange     '0.8.2',
24 silly addNameRange     '0.8.3',
24 silly addNameRange     '0.9.0',
24 silly addNameRange     '0.10.0',
24 silly addNameRange     '0.10.1',
24 silly addNameRange     '0.10.2',
24 silly addNameRange     '0.10.3',
24 silly addNameRange     '0.11.0',
24 silly addNameRange     '0.11.1',
24 silly addNameRange     '0.11.2',
24 silly addNameRange     '0.11.3',
24 silly addNameRange     '0.12.0',
24 silly addNameRange     '0.12.1',
24 silly addNameRange     '0.13.0',
24 silly addNameRange     '0.13.1',
24 silly addNameRange     '1.0.0',
24 silly addNameRange     '1.0.1',
24 silly addNameRange     '1.0.2',
24 silly addNameRange     '1.0.3',
24 silly addNameRange     '1.0.4',
24 silly addNameRange     '1.1.0',
24 silly addNameRange     '1.1.1',
24 silly addNameRange     '1.1.2',
24 silly addNameRange     '1.1.3',
24 silly addNameRange     '1.1.4',
24 silly addNameRange     '1.1.5',
24 silly addNameRange     '1.1.6' ] ]
25 verbose addNamed [ 'canvas', '1.1.6' ]
26 verbose addNamed [ '1.1.6', '1.1.6' ]
27 silly lockFile 4f76786f-canvas-1-1-6 canvas@1.1.6
28 verbose lock canvas@1.1.6 /home/codio/.npm/4f76786f-canvas-1-1-6.lock
29 silly lockFile 893c69ff-pmjs-org-canvas-canvas-1-1-6-tgz https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz
30 verbose lock https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz /home/codio/.npm/893c69ff-pmjs-org-canvas-canvas-1-1-6-tgz.lock
31 verbose addRemoteTarball [ 'https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz',
31 verbose addRemoteTarball   'd84b088f3bcd3840fe14977cd3625f5fe89f81ee' ]
32 info retry fetch attempt 1 at 18:30:44
33 verbose fetch to= /home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz
34 http GET https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz
35 http 200 https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz
36 verbose tar unpack /home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz
37 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
38 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package /home/codio/.npm/5418584a-4639-0-04546194523572922-package.lock
39 silly lockFile 0842855b-4639-0-04546194523572922-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz
40 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz /home/codio/.npm/0842855b-4639-0-04546194523572922-tmp-tgz.lock
41 silly gunzTarPerm modes [ '755', '644' ]
42 silly gunzTarPerm extractEntry package.json
43 silly gunzTarPerm extractEntry .npmignore
44 silly gunzTarPerm extractEntry index.js
45 silly gunzTarPerm extractEntry History.md
46 silly gunzTarPerm extractEntry Makefile
47 silly gunzTarPerm extractEntry Readme.md
48 silly gunzTarPerm extractEntry binding.gyp
49 silly gunzTarPerm extractEntry .gitmodules
50 silly gunzTarPerm extractEntry install
51 silly gunzTarPerm extractEntry lib/bindings.js
52 silly gunzTarPerm extractEntry lib/canvas.js
53 silly gunzTarPerm extractEntry lib/context2d.js
54 silly gunzTarPerm extractEntry lib/image.js
55 silly gunzTarPerm extractEntry lib/jpegstream.js
56 silly gunzTarPerm extractEntry lib/pixelarray.js
57 silly gunzTarPerm extractEntry lib/pngstream.js
58 silly gunzTarPerm extractEntry src/Image.h
59 silly gunzTarPerm extractEntry src/Canvas.cc
60 silly gunzTarPerm extractEntry src/CanvasGradient.cc
61 silly gunzTarPerm extractEntry src/CanvasGradient.h
62 silly gunzTarPerm extractEntry src/CanvasPattern.cc
63 silly gunzTarPerm extractEntry src/CanvasPattern.h
64 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.cc
65 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.h
66 silly gunzTarPerm extractEntry src/FontFace.cc
67 silly gunzTarPerm extractEntry src/FontFace.h
68 silly gunzTarPerm extractEntry src/Image.cc
69 silly gunzTarPerm extractEntry src/Canvas.h
70 silly gunzTarPerm extractEntry src/ImageData.cc
71 silly gunzTarPerm extractEntry src/ImageData.h
72 silly gunzTarPerm extractEntry src/JPEGStream.h
73 silly gunzTarPerm extractEntry src/PNG.h
74 silly gunzTarPerm extractEntry src/PixelArray.cc
75 silly gunzTarPerm extractEntry src/PixelArray.h
76 silly gunzTarPerm extractEntry src/Point.h
77 silly gunzTarPerm extractEntry src/closure.h
78 silly gunzTarPerm extractEntry src/color.cc
79 silly gunzTarPerm extractEntry src/color.h
80 silly gunzTarPerm extractEntry src/init.cc
81 silly gunzTarPerm extractEntry .travis.yml
82 silly gunzTarPerm extractEntry util/cairo_include.sh
83 silly gunzTarPerm extractEntry util/has_cairo_freetype.sh
84 silly gunzTarPerm extractEntry util/has_lib.sh
85 silly gunzTarPerm extractEntry util/lib_lookup.sh
86 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
87 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
88 silly lockFile 0842855b-4639-0-04546194523572922-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz
89 silly lockFile 0842855b-4639-0-04546194523572922-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/tmp.tgz
90 verbose tar pack [ '/home/codio/.npm/canvas/1.1.6/package.tgz',
90 verbose tar pack   '/home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package' ]
91 verbose tarball /home/codio/.npm/canvas/1.1.6/package.tgz
92 verbose folder /home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
93 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
94 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package /home/codio/.npm/5418584a-4639-0-04546194523572922-package.lock
95 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
96 verbose lock tar:///home/codio/.npm/canvas/1.1.6/package.tgz /home/codio/.npm/c8ca4653-dio-npm-canvas-1-1-6-package-tgz.lock
97 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
98 silly lockFile 5418584a-4639-0-04546194523572922-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026644639-0.04546194523572922/package
99 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
100 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
101 silly lockFile ec2db0dc-e-codio-npm-canvas-1-1-6-package /home/codio/.npm/canvas/1.1.6/package
102 verbose lock /home/codio/.npm/canvas/1.1.6/package /home/codio/.npm/ec2db0dc-e-codio-npm-canvas-1-1-6-package.lock
103 silly lockFile ec2db0dc-e-codio-npm-canvas-1-1-6-package /home/codio/.npm/canvas/1.1.6/package
104 silly lockFile ec2db0dc-e-codio-npm-canvas-1-1-6-package /home/codio/.npm/canvas/1.1.6/package
105 verbose tar unpack /home/codio/.npm/canvas/1.1.6/package.tgz
106 silly lockFile ebe55854-e-codio-npm-canvas-1-1-6-package tar:///home/codio/.npm/canvas/1.1.6/package
107 verbose lock tar:///home/codio/.npm/canvas/1.1.6/package /home/codio/.npm/ebe55854-e-codio-npm-canvas-1-1-6-package.lock
108 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
109 verbose lock tar:///home/codio/.npm/canvas/1.1.6/package.tgz /home/codio/.npm/c8ca4653-dio-npm-canvas-1-1-6-package-tgz.lock
110 silly gunzTarPerm modes [ '755', '644' ]
111 silly gunzTarPerm extractEntry package.json
112 silly gunzTarPerm extractEntry .npmignore
113 silly gunzTarPerm extractEntry index.js
114 silly gunzTarPerm extractEntry binding.gyp
115 silly gunzTarPerm extractEntry Makefile
116 silly gunzTarPerm extractEntry Readme.md
117 silly gunzTarPerm extractEntry .gitmodules
118 silly gunzTarPerm extractEntry .travis.yml
119 silly gunzTarPerm extractEntry install
120 silly gunzTarPerm extractEntry lib/bindings.js
121 silly gunzTarPerm extractEntry lib/canvas.js
122 silly gunzTarPerm extractEntry lib/context2d.js
123 silly gunzTarPerm extractEntry lib/image.js
124 silly gunzTarPerm extractEntry lib/jpegstream.js
125 silly gunzTarPerm extractEntry lib/pixelarray.js
126 silly gunzTarPerm extractEntry lib/pngstream.js
127 silly gunzTarPerm extractEntry History.md
128 silly gunzTarPerm extractEntry src/Image.h
129 silly gunzTarPerm extractEntry src/Canvas.cc
130 silly gunzTarPerm extractEntry src/CanvasGradient.cc
131 silly gunzTarPerm extractEntry src/CanvasGradient.h
132 silly gunzTarPerm extractEntry src/CanvasPattern.cc
133 silly gunzTarPerm extractEntry src/CanvasPattern.h
134 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.cc
135 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.h
136 silly gunzTarPerm extractEntry src/FontFace.cc
137 silly gunzTarPerm extractEntry src/FontFace.h
138 silly gunzTarPerm extractEntry src/Image.cc
139 silly gunzTarPerm extractEntry src/Canvas.h
140 silly gunzTarPerm extractEntry src/ImageData.cc
141 silly gunzTarPerm extractEntry src/ImageData.h
142 silly gunzTarPerm extractEntry src/JPEGStream.h
143 silly gunzTarPerm extractEntry src/PNG.h
144 silly gunzTarPerm extractEntry src/PixelArray.cc
145 silly gunzTarPerm extractEntry src/PixelArray.h
146 silly gunzTarPerm extractEntry src/Point.h
147 silly gunzTarPerm extractEntry src/closure.h
148 silly gunzTarPerm extractEntry src/color.cc
149 silly gunzTarPerm extractEntry src/color.h
150 silly gunzTarPerm extractEntry src/init.cc
151 silly gunzTarPerm extractEntry util/cairo_include.sh
152 silly gunzTarPerm extractEntry util/has_cairo_freetype.sh
153 silly gunzTarPerm extractEntry util/has_lib.sh
154 silly gunzTarPerm extractEntry util/lib_lookup.sh
155 silly lockFile ebe55854-e-codio-npm-canvas-1-1-6-package tar:///home/codio/.npm/canvas/1.1.6/package
156 silly lockFile ebe55854-e-codio-npm-canvas-1-1-6-package tar:///home/codio/.npm/canvas/1.1.6/package
157 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
158 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
159 verbose chmod /home/codio/.npm/canvas/1.1.6/package.tgz 644
160 verbose chown /home/codio/.npm/canvas/1.1.6/package.tgz [ 1100, 1100 ]
161 silly lockFile 893c69ff-pmjs-org-canvas-canvas-1-1-6-tgz https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz
162 silly lockFile 893c69ff-pmjs-org-canvas-canvas-1-1-6-tgz https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz
163 silly lockFile 4f76786f-canvas-1-1-6 canvas@1.1.6
164 silly lockFile 4f76786f-canvas-1-1-6 canvas@1.1.6
165 silly lockFile 7328b956-canvas canvas@
166 silly lockFile 7328b956-canvas canvas@
167 silly resolved [ { name: 'canvas',
167 silly resolved     description: 'Canvas graphics API backed by Cairo',
167 silly resolved     version: '1.1.6',
167 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@learnboost.com' },
167 silly resolved     contributors: [ [Object], [Object], [Object] ],
167 silly resolved     keywords:
167 silly resolved      [ 'canvas',
167 silly resolved        'graphic',
167 silly resolved        'graphics',
167 silly resolved        'pixman',
167 silly resolved        'cairo',
167 silly resolved        'image',
167 silly resolved        'images',
167 silly resolved        'pdf' ],
167 silly resolved     homepage: 'https://github.com/learnboost/node-canvas',
167 silly resolved     repository: { type: 'git', url: 'git://github.com/learnboost/node-canvas' },
167 silly resolved     scripts: { test: 'make test', install: 'node-gyp rebuild' },
167 silly resolved     dependencies: { nan: '~1.2.0' },
167 silly resolved     devDependencies: { express: '3.0', jade: '0.28.1', mocha: '*', should: '*' },
167 silly resolved     engines: { node: '>= 0.6.0' },
167 silly resolved     main: './lib/canvas.js',
167 silly resolved     gypfile: true,
167 silly resolved     readme: '[![NPM version](https://badge.fury.io/js/canvas.png)](http://badge.fury.io/js/canvas)\n[![Dependency Status](https://gemnasium.com/LearnBoost/node-canvas.png)](https://gemnasium.com/LearnBoost/node-canvas)\n\n# node-canvas\n\n Node canvas is a [Cairo](http://cairographics.org/) backed Canvas implementation for [NodeJS](http://nodejs.org).\n\n## Authors\n\n  - TJ Holowaychuk ([visionmedia](http://github.com/visionmedia))\n  - Nathan Rajlich ([TooTallNate](http://github.com/TooTallNate))\n  - Rod Vagg ([rvagg](http://github.com/rvagg))\n  - Juriy Zaytsev ([kangax](http://github.com/kangax))\n\n## Installation\n\n```bash\n$ npm install canvas\n```\n\nUnless previously installed you\'ll _need_ __Cairo__. For system-specific installation view the [Wiki](https://github.com/LearnBoost/node-canvas/wiki/_pages).\n\nYou can quickly install Cairo and its dependencies for OS X using the one liner below:\n\n```bash\n$ wget https://raw.githubusercontent.com/LearnBoost/node-canvas/master/install -O - | sh\n```\n\n## Screencasts\n\n  - [Introduction](http://screenr.com/CTk)\n\n## Example\n\n```javascript\nvar Canvas = require(\'canvas\')\n  , Image = Canvas.Image\n  , canvas = new Canvas(200,200)\n  , ctx = canvas.getContext(\'2d\');\n\nctx.font = \'30px Impact\';\nctx.rotate(.1);\nctx.fillText("Awesome!", 50, 100);\n\nvar te = ctx.measureText(\'Awesome!\');\nctx.strokeStyle = \'rgba(0,0,0,0.5)\';\nctx.beginPath();\nctx.lineTo(50, 102);\nctx.lineTo(50 + te.width, 102);\nctx.stroke();\n\nconsole.log(\'<img src="\' + canvas.toDataURL() + \'" />\');\n```\n\n## Non-Standard API\n\n node-canvas extends the canvas API to provide interfacing with node, for example streaming PNG data, converting to a `Buffer` instance, etc. Among the interfacing API, in some cases the drawing API has been extended for SSJS image manipulation / creation usage, however keep in mind these additions may fail to render properly within browsers.\n\n### Image#src=Buffer\n\n node-canvas adds `Image#src=Buffer` support, allowing you to read images from disc, redis, etc and apply them via `ctx.drawImage()`. Below we draw scaled down squid png by reading it from the disk with node\'s I/O.\n\n```javascript\nfs.readFile(__dirname + \'/images/squid.png\', function(err, squid){\n  if (err) throw err;\n  img = new Image;\n  img.src = squid;\n  ctx.drawImage(img, 0, 0, img.width / 4, img.height / 4);\n});\n```\n\n Below is an example of a canvas drawing it-self as the source several time:\n\n```javascript\nvar img = new Image;\nimg.src = canvas.toBuffer();\nctx.drawImage(img, 0, 0, 50, 50);\nctx.drawImage(img, 50, 0, 50, 50);\nctx.drawImage(img, 100, 0, 50, 50);\n```\n\n### Image#dataMode\n\nnode-canvas adds `Image#dataMode` support, which can be used to opt-in to mime data tracking of images (currently only JPEGs).\n\nWhen mime data is tracked, in PDF mode JPEGs can be embedded directly into the output, rather than being re-encoded into PNG. This can drastically reduce filesize, and speed up rendering.\n\n```javascript\nvar img = new Image;\nimg.dataMode = Image.MODE_IMAGE; // Only image data tracked\nimg.dataMode = Image.MODE_MIME; // Only mime data tracked\nimg.dataMode = Image.MODE_MIME | Image.MODE_IMAGE; // Both are tracked\n```\n\nIf image data is not tracked, and the Image is drawn to an image rather than a PDF canvas, the output will be junk. Enabling mime data tracking has no benefits (only a slow down) unless you are generating a PDF.\n\n### Canvas#pngStream()\n\n  To create a `PNGStream` simply call `canvas.pngStream()`, and the stream will start to emit _data_ events, finally emitting _end_ when finished. If an exception occurs the _error_ event is emitted.\n\n```javascript\nvar fs = require(\'fs\')\n  , out = fs.createWriteStream(__dirname + \'/text.png\')\n  , stream = canvas.pngStream();\n\nstream.on(\'data\', function(chunk){\n  out.write(chunk);\n});\n\nstream.on(\'end\', function(){\n  console.log(\'saved png\');\n});\n```\n\nCurrently _only_ sync streaming is supported, however we plan on supporting async streaming as well (of course :) ). Until then the `Canvas#toBuffer(callback)` alternative is async utilizing `eio_custom()`.\n\n### Canvas#jpegStream() and Canvas#syncJPEGStream()\n\nYou can likewise create a `JPEGStream` by calling `canvas.jpegStream()` with\nsome optional parameters; functionality is otherwise identical to\n`pngStream()`. See `examples/crop.js` for an example.\n\n_Note: At the moment, `jpegStream()` is the same as `syncJPEGStream()`, both\nare synchronous_\n\n```javascript\nvar stream = canvas.jpegStream({\n    bufsize: 4096 // output buffer size in bytes, default: 4096\n  , quality: 75 // JPEG quality (0-100) default: 75\n  , progressive: false // true for progressive compression, default: false\n});\n```\n\n### Canvas#toBuffer()\n\nA call to `Canvas#toBuffer()` will return a node `Buffer` instance containing all of the PNG data.\n\n```javascript\ncanvas.toBuffer();\n```\n\n### Canvas#toBuffer() async\n\nOptionally we may pass a callback function to `Canvas#toBuffer()`, and this process will be performed asynchronously, and will `callback(err, buf)`.\n\n```javascript\ncanvas.toBuffer(function(err, buf){\n\n});\n```\n\n### Canvas#toDataURL() async\n\nOptionally we may pass a callback function to `Canvas#toDataURL()`, and this process will be performed asynchronously, and will `callback(err, str)`.\n\n```javascript\ncanvas.toDataURL(function(err, str){\n\n});\n```\n\nor specify the mime type:\n\n```javascript\ncanvas.toDataURL(\'image/png\', function(err, str){\n\n});\n```\n\n### CanvasRenderingContext2d#patternQuality\n\nGiven one of the values below will alter pattern (gradients, images, etc) render quality, defaults to _good_.\n\n  - fast\n  - good\n  - best\n  - nearest\n  - bilinear\n\n### CanvasRenderingContext2d#textDrawingMode\n\nCan be either `path` or `glyph`. Using `glyph` is much faster than `path` for drawing, and when using a PDF context will embed the text natively, so will be selectable and lower filesize. The downside is that cairo does not have any subpixel precision for `glyph`, so this will be noticeably lower quality for text positioning in cases such as rotated text. Also, strokeText in `glyph` will act the same as fillText, except using the stroke style for the fill.\n\nDefaults to _path_.\n\nThis property is tracked as part of the canvas state in save/restore.\n\n### CanvasRenderingContext2d#filter\n\nLike `patternQuality`, but applies to transformations effecting more than just patterns. Defaults to _good_.\n\n  - fast\n  - good\n  - best\n  - nearest\n  - bilinear\n\n### Global Composite Operations\n\nIn addition to those specified and commonly implemented by browsers, the following have been added:\n\n  - multiply\n  - screen\n  - overlay\n  - hard-light\n  - soft-light\n  - hsl-hue\n  - hsl-saturation\n  - hsl-color\n  - hsl-luminosity\n\n## Anti-Aliasing\n\n Set anti-aliasing mode\n\n - default\n - none\n - gray\n - subpixel\n\n For example:\n\n```javascript\nctx.antialias = \'none\';\n```\n\n## PDF Support\n\n  Basic PDF support was added in 0.11.0. Make sure to install cairo with `--enable-pdf=yes` for the PDF backend. node-canvas must know that it is creating\n  a PDF on initialization, using the "pdf" string:\n\n```js\nvar canvas = new Canvas(200, 500, \'pdf\');\n```\n\n An additional method `.addPage()` is then available to create\n multiple page PDFs:\n\n```js\nctx.font = \'22px Helvetica\';\nctx.fillText(\'Hello World\', 50, 80);\nctx.addPage();\n\nctx.font = \'22px Helvetica\';\nctx.fillText(\'Hello World 2\', 50, 80);\nctx.addPage();\n\nctx.font = \'22px Helvetica\';\nctx.fillText(\'Hello World 3\', 50, 80);\nctx.addPage();\n```\n\n## Benchmarks\n\n Although node-canvas is extremely new, and we have not even begun optimization yet it is already quite fast. For benchmarks vs other node canvas implementations view this [gist](https://gist.github.com/664922), or update the submodules and run `$ make benchmark` yourself.\n\n## Contribute\n\n Want to contribute to node-canvas? patches for features, bug fixes, documentation, examples and others are certainly welcome. Take a look at the [issue queue](https://github.com/LearnBoost/node-canvas/issues) for existing issues.\n\n## Examples\n\n Examples are placed in _./examples_, be sure to check them out! most produce a png image of the same name, and others such as _live-clock.js_ launch an http server to be viewed in the browser.\n\n## Testing\n\nIf you have not previously, init git submodules:\n\n    $ git submodule update --init\n\nBuild node-canvas:\n\n    $ node-waf configure build\n\nUnit tests:\n\n    $ make test\n\nVisual tests:\n\n    $ make test-server\n\n## Versions\n\nTested with and designed for:\n\n  - node 0.4.2\n  - cairo 1.8.6\n\nFor node 0.2.x `node-canvas` <= 0.4.3 may be used,\n0.5.0 and above are designed for node 0.4.x only.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010 LearnBoost, and contributors &lt;dev@learnboost.com&gt;\n\nCopyright (c) 2014 Automattic, Inc and contributors &lt;dev@automattic.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
167 silly resolved     readmeFilename: 'Readme.md',
167 silly resolved     bugs: { url: 'https://github.com/learnboost/node-canvas/issues' },
167 silly resolved     _id: 'canvas@1.1.6',
167 silly resolved     dist: { shasum: '09684f6df92feb7ec2e708cc40f6198bfa97150a' },
167 silly resolved     _from: 'canvas@',
167 silly resolved     _resolved: 'https://registry.npmjs.org/canvas/-/canvas-1.1.6.tgz' } ]
168 info install canvas@1.1.6 into /home/codio/.nvm/v0.10.25/lib
169 info installOne canvas@1.1.6
170 info /home/codio/.nvm/v0.10.25/lib/node_modules/canvas unbuild
171 verbose tar unpack /home/codio/.npm/canvas/1.1.6/package.tgz
172 silly lockFile c07a62e2-v0-10-25-lib-node-modules-canvas tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas
173 verbose lock tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas /home/codio/.npm/c07a62e2-v0-10-25-lib-node-modules-canvas.lock
174 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
175 verbose lock tar:///home/codio/.npm/canvas/1.1.6/package.tgz /home/codio/.npm/c8ca4653-dio-npm-canvas-1-1-6-package-tgz.lock
176 silly gunzTarPerm modes [ '755', '644' ]
177 silly gunzTarPerm extractEntry package.json
178 silly gunzTarPerm extractEntry .npmignore
179 silly gunzTarPerm extractEntry index.js
180 silly gunzTarPerm extractEntry binding.gyp
181 silly gunzTarPerm extractEntry Makefile
182 silly gunzTarPerm extractEntry Readme.md
183 silly gunzTarPerm extractEntry .gitmodules
184 silly gunzTarPerm extractEntry .travis.yml
185 silly gunzTarPerm extractEntry install
186 silly gunzTarPerm extractEntry lib/bindings.js
187 silly gunzTarPerm extractEntry lib/canvas.js
188 silly gunzTarPerm extractEntry lib/context2d.js
189 silly gunzTarPerm extractEntry lib/image.js
190 silly gunzTarPerm extractEntry lib/jpegstream.js
191 silly gunzTarPerm extractEntry lib/pixelarray.js
192 silly gunzTarPerm extractEntry lib/pngstream.js
193 silly gunzTarPerm extractEntry History.md
194 silly gunzTarPerm extractEntry src/Image.h
195 silly gunzTarPerm extractEntry src/Canvas.cc
196 silly gunzTarPerm extractEntry src/CanvasGradient.cc
197 silly gunzTarPerm extractEntry src/CanvasGradient.h
198 silly gunzTarPerm extractEntry src/CanvasPattern.cc
199 silly gunzTarPerm extractEntry src/CanvasPattern.h
200 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.cc
201 silly gunzTarPerm extractEntry src/CanvasRenderingContext2d.h
202 silly gunzTarPerm extractEntry src/FontFace.cc
203 silly gunzTarPerm extractEntry src/FontFace.h
204 silly gunzTarPerm extractEntry src/Image.cc
205 silly gunzTarPerm extractEntry src/Canvas.h
206 silly gunzTarPerm extractEntry src/ImageData.cc
207 silly gunzTarPerm extractEntry src/ImageData.h
208 silly gunzTarPerm extractEntry src/JPEGStream.h
209 silly gunzTarPerm extractEntry src/PNG.h
210 silly gunzTarPerm extractEntry src/PixelArray.cc
211 silly gunzTarPerm extractEntry src/PixelArray.h
212 silly gunzTarPerm extractEntry src/Point.h
213 silly gunzTarPerm extractEntry src/closure.h
214 silly gunzTarPerm extractEntry src/color.cc
215 silly gunzTarPerm extractEntry src/color.h
216 silly gunzTarPerm extractEntry src/init.cc
217 silly gunzTarPerm extractEntry util/cairo_include.sh
218 silly gunzTarPerm extractEntry util/has_cairo_freetype.sh
219 silly gunzTarPerm extractEntry util/has_lib.sh
220 silly gunzTarPerm extractEntry util/lib_lookup.sh
221 silly lockFile c07a62e2-v0-10-25-lib-node-modules-canvas tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas
222 silly lockFile c07a62e2-v0-10-25-lib-node-modules-canvas tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas
223 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
224 silly lockFile c8ca4653-dio-npm-canvas-1-1-6-package-tgz tar:///home/codio/.npm/canvas/1.1.6/package.tgz
225 info preinstall canvas@1.1.6
226 verbose readDependencies using package.json deps
227 verbose readDependencies using package.json deps
228 verbose cache add [ 'nan@~1.2.0', null ]
229 verbose cache add name=undefined spec="nan@~1.2.0" args=["nan@~1.2.0",null]
230 verbose parsed url { protocol: null,
230 verbose parsed url   slashes: null,
230 verbose parsed url   auth: null,
230 verbose parsed url   host: null,
230 verbose parsed url   port: null,
230 verbose parsed url   hostname: null,
230 verbose parsed url   hash: null,
230 verbose parsed url   search: null,
230 verbose parsed url   query: null,
230 verbose parsed url   pathname: 'nan@~1.2.0',
230 verbose parsed url   path: 'nan@~1.2.0',
230 verbose parsed url   href: 'nan@~1.2.0' }
231 verbose cache add name="nan" spec="~1.2.0" args=["nan","~1.2.0"]
232 verbose parsed url { protocol: null,
232 verbose parsed url   slashes: null,
232 verbose parsed url   auth: null,
232 verbose parsed url   host: null,
232 verbose parsed url   port: null,
232 verbose parsed url   hostname: null,
232 verbose parsed url   hash: null,
232 verbose parsed url   search: null,
232 verbose parsed url   query: null,
232 verbose parsed url   pathname: '~1.2.0',
232 verbose parsed url   path: '~1.2.0',
232 verbose parsed url   href: '~1.2.0' }
233 verbose addNamed [ 'nan', '~1.2.0' ]
234 verbose addNamed [ null, '>=1.2.0-0 <1.3.0-0' ]
235 silly lockFile 6bb36ab7-nan-1-2-0 nan@~1.2.0
236 verbose lock nan@~1.2.0 /home/codio/.npm/6bb36ab7-nan-1-2-0.lock
237 silly addNameRange { name: 'nan', range: '>=1.2.0-0 <1.3.0-0', hasData: false }
238 verbose url raw nan
239 verbose url resolving [ 'https://registry.npmjs.org/', './nan' ]
240 verbose url resolved https://registry.npmjs.org/nan
241 info trying registry request attempt 1 at 18:30:45
242 verbose etag "BASL4AHUZL2X9BYWJN23MGK84"
243 http GET https://registry.npmjs.org/nan
244 http 304 https://registry.npmjs.org/nan
245 silly registry.get cb [ 304,
245 silly registry.get   { date: 'Wed, 26 Nov 2014 18:30:45 GMT',
245 silly registry.get     server: 'Apache',
245 silly registry.get     via: '1.1 varnish',
245 silly registry.get     'last-modified': 'Wed, 26 Nov 2014 18:30:28 GMT',
245 silly registry.get     'cache-control': 'max-age=60',
245 silly registry.get     etag: '"BASL4AHUZL2X9BYWJN23MGK84"',
245 silly registry.get     age: '25',
245 silly registry.get     'x-served-by': 'cache-iad2122-IAD',
245 silly registry.get     'x-cache': 'HIT',
245 silly registry.get     'x-cache-hits': '2',
245 silly registry.get     'x-timer': 'S1417026645.121230,VS0,VE0',
245 silly registry.get     vary: 'Accept',
245 silly registry.get     'content-length': '0',
245 silly registry.get     'keep-alive': 'timeout=10, max=50',
245 silly registry.get     connection: 'Keep-Alive' } ]
246 verbose etag nan from cache
247 silly addNameRange number 2 { name: 'nan', range: '>=1.2.0-0 <1.3.0-0', hasData: true }
248 silly addNameRange versions [ 'nan',
248 silly addNameRange   [ '0.3.0-wip',
248 silly addNameRange     '0.3.0-wip2',
248 silly addNameRange     '0.3.0',
248 silly addNameRange     '0.3.1',
248 silly addNameRange     '0.3.2',
248 silly addNameRange     '0.4.0',
248 silly addNameRange     '0.4.1',
248 silly addNameRange     '0.4.2',
248 silly addNameRange     '0.4.3',
248 silly addNameRange     '0.4.4',
248 silly addNameRange     '0.5.0',
248 silly addNameRange     '0.5.1',
248 silly addNameRange     '0.5.2',
248 silly addNameRange     '0.6.0',
248 silly addNameRange     '0.7.0',
248 silly addNameRange     '0.7.1',
248 silly addNameRange     '0.8.0',
248 silly addNameRange     '1.0.0',
248 silly addNameRange     '1.1.0',
248 silly addNameRange     '1.1.1',
248 silly addNameRange     '1.1.2',
248 silly addNameRange     '1.2.0',
248 silly addNameRange     '1.3.0',
248 silly addNameRange     '1.4.0',
248 silly addNameRange     '1.4.1' ] ]
249 verbose addNamed [ 'nan', '1.2.0' ]
250 verbose addNamed [ '1.2.0', '1.2.0' ]
251 silly lockFile 859d0f28-nan-1-2-0 nan@1.2.0
252 verbose lock nan@1.2.0 /home/codio/.npm/859d0f28-nan-1-2-0.lock
253 silly lockFile 343fa712-stry-npmjs-org-nan-nan-1-2-0-tgz https://registry.npmjs.org/nan/-/nan-1.2.0.tgz
254 verbose lock https://registry.npmjs.org/nan/-/nan-1.2.0.tgz /home/codio/.npm/343fa712-stry-npmjs-org-nan-nan-1-2-0-tgz.lock
255 verbose addRemoteTarball [ 'https://registry.npmjs.org/nan/-/nan-1.2.0.tgz',
255 verbose addRemoteTarball   '9c4d63ce9e4f8e95de2d574e18f7925554a8a8ef' ]
256 info retry fetch attempt 1 at 18:30:45
257 verbose fetch to= /home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz
258 http GET https://registry.npmjs.org/nan/-/nan-1.2.0.tgz
259 http 200 https://registry.npmjs.org/nan/-/nan-1.2.0.tgz
260 verbose tar unpack /home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz
261 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
262 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package /home/codio/.npm/a2bc97df-45122-0-9116265845950693-package.lock
263 silly lockFile 5051d64d-45122-0-9116265845950693-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz
264 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz /home/codio/.npm/5051d64d-45122-0-9116265845950693-tmp-tgz.lock
265 silly gunzTarPerm modes [ '755', '644' ]
266 silly gunzTarPerm extractEntry package.json
267 silly gunzTarPerm extractEntry README.md
268 silly gunzTarPerm extractEntry LICENSE
269 silly gunzTarPerm extractEntry include_dirs.js
270 silly gunzTarPerm extractEntry .dntrc
271 silly gunzTarPerm extractEntry build/config.gypi
272 silly gunzTarPerm extractEntry nan.h
273 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
274 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
275 silly lockFile 5051d64d-45122-0-9116265845950693-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz
276 silly lockFile 5051d64d-45122-0-9116265845950693-tmp-tgz tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/tmp.tgz
277 verbose tar pack [ '/home/codio/.npm/nan/1.2.0/package.tgz',
277 verbose tar pack   '/home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package' ]
278 verbose tarball /home/codio/.npm/nan/1.2.0/package.tgz
279 verbose folder /home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
280 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
281 verbose lock tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package /home/codio/.npm/a2bc97df-45122-0-9116265845950693-package.lock
282 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
283 verbose lock tar:///home/codio/.npm/nan/1.2.0/package.tgz /home/codio/.npm/94a399f5--codio-npm-nan-1-2-0-package-tgz.lock
284 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
285 silly lockFile a2bc97df-45122-0-9116265845950693-package tar:///home/codio/tmp/npm-628-9QWTNUxN/1417026645122-0.9116265845950693/package
286 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
287 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
288 silly lockFile aba68683-home-codio-npm-nan-1-2-0-package /home/codio/.npm/nan/1.2.0/package
289 verbose lock /home/codio/.npm/nan/1.2.0/package /home/codio/.npm/aba68683-home-codio-npm-nan-1-2-0-package.lock
290 silly lockFile aba68683-home-codio-npm-nan-1-2-0-package /home/codio/.npm/nan/1.2.0/package
291 silly lockFile aba68683-home-codio-npm-nan-1-2-0-package /home/codio/.npm/nan/1.2.0/package
292 verbose tar unpack /home/codio/.npm/nan/1.2.0/package.tgz
293 silly lockFile 87b384f5-home-codio-npm-nan-1-2-0-package tar:///home/codio/.npm/nan/1.2.0/package
294 verbose lock tar:///home/codio/.npm/nan/1.2.0/package /home/codio/.npm/87b384f5-home-codio-npm-nan-1-2-0-package.lock
295 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
296 verbose lock tar:///home/codio/.npm/nan/1.2.0/package.tgz /home/codio/.npm/94a399f5--codio-npm-nan-1-2-0-package-tgz.lock
297 silly gunzTarPerm modes [ '755', '644' ]
298 silly gunzTarPerm extractEntry package.json
299 silly gunzTarPerm extractEntry README.md
300 silly gunzTarPerm extractEntry LICENSE
301 silly gunzTarPerm extractEntry include_dirs.js
302 silly gunzTarPerm extractEntry .dntrc
303 silly gunzTarPerm extractEntry build/config.gypi
304 silly gunzTarPerm extractEntry nan.h
305 silly lockFile 87b384f5-home-codio-npm-nan-1-2-0-package tar:///home/codio/.npm/nan/1.2.0/package
306 silly lockFile 87b384f5-home-codio-npm-nan-1-2-0-package tar:///home/codio/.npm/nan/1.2.0/package
307 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
308 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
309 verbose chmod /home/codio/.npm/nan/1.2.0/package.tgz 644
310 verbose chown /home/codio/.npm/nan/1.2.0/package.tgz [ 1100, 1100 ]
311 silly lockFile 343fa712-stry-npmjs-org-nan-nan-1-2-0-tgz https://registry.npmjs.org/nan/-/nan-1.2.0.tgz
312 silly lockFile 343fa712-stry-npmjs-org-nan-nan-1-2-0-tgz https://registry.npmjs.org/nan/-/nan-1.2.0.tgz
313 silly lockFile 859d0f28-nan-1-2-0 nan@1.2.0
314 silly lockFile 859d0f28-nan-1-2-0 nan@1.2.0
315 silly lockFile 6bb36ab7-nan-1-2-0 nan@~1.2.0
316 silly lockFile 6bb36ab7-nan-1-2-0 nan@~1.2.0
317 silly resolved [ { name: 'nan',
317 silly resolved     version: '1.2.0',
317 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
317 silly resolved     main: 'include_dirs.js',
317 silly resolved     repository: { type: 'git', url: 'git://github.com/rvagg/nan.git' },
317 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
317 silly resolved     license: 'MIT',
317 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**\n\n***Current version: 1.2.0*** *(See [nan.h](https://github.com/rvagg/nan/blob/master/nan.h) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6)](https://nodei.co/npm/nan/)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n\n<a name="news"></a>\n## News & Updates\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/rvagg/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/rvagg/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/rvagg/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a>\n * <a href="#api_nan_c_string"><b><code>NanCString</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects and make new local handles.\n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n  \n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(Object)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### <del>Local&lt;String&gt; NanSymbol(const char *)</del>\n\nDeprecated. Use `NanNew<String>` instead.\n<del>Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.</del>\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)\n\nWhen you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] decoded;\n```\n\n<a name="api_nan_c_string"></a>\n### char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])\n\nWhen you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])\nCreates a new `Local<Context>` handle.\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value)\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value)\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This is the only proper way of calling functions.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetCallback()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n  \n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n  \n  // Set an error message\n  void SetErrorMessage(const char *msg);\n  \nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n### Contributors\n\nNAN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n</tbody></table>\n\nLicence &amp; copyright\n-----------------------\n\nCopyright (c) 2014 NAN contributors (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT +no-false-attribs license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
317 silly resolved     readmeFilename: 'README.md',
317 silly resolved     bugs: { url: 'https://github.com/rvagg/nan/issues' },
317 silly resolved     homepage: 'https://github.com/rvagg/nan',
317 silly resolved     _id: 'nan@1.2.0',
317 silly resolved     dist: { shasum: '8a90fb0f25e45a6cd52bf113241deec0b402ffb0' },
317 silly resolved     _from: 'nan@~1.2.0',
317 silly resolved     _resolved: 'https://registry.npmjs.org/nan/-/nan-1.2.0.tgz' } ]
318 info install nan@1.2.0 into /home/codio/.nvm/v0.10.25/lib/node_modules/canvas
319 info installOne nan@1.2.0
320 info /home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan unbuild
321 verbose tar unpack /home/codio/.npm/nan/1.2.0/package.tgz
322 silly lockFile 42bd7069--modules-canvas-node-modules-nan tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan
323 verbose lock tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan /home/codio/.npm/42bd7069--modules-canvas-node-modules-nan.lock
324 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
325 verbose lock tar:///home/codio/.npm/nan/1.2.0/package.tgz /home/codio/.npm/94a399f5--codio-npm-nan-1-2-0-package-tgz.lock
326 silly gunzTarPerm modes [ '755', '644' ]
327 silly gunzTarPerm extractEntry package.json
328 silly gunzTarPerm extractEntry README.md
329 silly gunzTarPerm extractEntry LICENSE
330 silly gunzTarPerm extractEntry include_dirs.js
331 silly gunzTarPerm extractEntry .dntrc
332 silly gunzTarPerm extractEntry build/config.gypi
333 silly gunzTarPerm extractEntry nan.h
334 silly lockFile 42bd7069--modules-canvas-node-modules-nan tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan
335 silly lockFile 42bd7069--modules-canvas-node-modules-nan tar:///home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan
336 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
337 silly lockFile 94a399f5--codio-npm-nan-1-2-0-package-tgz tar:///home/codio/.npm/nan/1.2.0/package.tgz
338 info preinstall nan@1.2.0
339 verbose readDependencies using package.json deps
340 verbose readDependencies using package.json deps
341 silly resolved []
342 verbose about to build /home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan
343 info build /home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules/nan
344 verbose linkStuff [ true,
344 verbose linkStuff   '/home/codio/.nvm/v0.10.25/lib/node_modules',
344 verbose linkStuff   false,
344 verbose linkStuff   '/home/codio/.nvm/v0.10.25/lib/node_modules/canvas/node_modules' ]
345 info linkStuff nan@1.2.0
346 verbose linkBins nan@1.2.0
347 verbose linkMans nan@1.2.0
348 verbose rebuildBundles nan@1.2.0
349 info install nan@1.2.0
350 info postinstall nan@1.2.0
351 verbose about to build /home/codio/.nvm/v0.10.25/lib/node_modules/canvas
352 info build /home/codio/.nvm/v0.10.25/lib/node_modules/canvas
353 verbose linkStuff [ true,
353 verbose linkStuff   '/home/codio/.nvm/v0.10.25/lib/node_modules',
353 verbose linkStuff   true,
353 verbose linkStuff   '/home/codio/.nvm/v0.10.25/lib/node_modules' ]
354 info linkStuff canvas@1.1.6
355 verbose linkBins canvas@1.1.6
356 verbose linkMans canvas@1.1.6
357 verbose rebuildBundles canvas@1.1.6
358 verbose rebuildBundles [ 'nan' ]
359 info install canvas@1.1.6
360 verbose unsafe-perm in lifecycle true
361 info canvas@1.1.6 Failed to exec install script
362 info /home/codio/.nvm/v0.10.25/lib/node_modules/canvas unbuild
363 info preuninstall canvas@1.1.6
364 info uninstall canvas@1.1.6
365 verbose true,/home/codio/.nvm/v0.10.25/lib/node_modules,/home/codio/.nvm/v0.10.25/lib/node_modules unbuild canvas@1.1.6
366 info postuninstall canvas@1.1.6
367 error canvas@1.1.6 install: `node-gyp rebuild`
367 error Exit status 1
368 error Failed at the canvas@1.1.6 install script.
368 error This is most likely a problem with the canvas package,
368 error not with npm itself.
368 error Tell the author that this fails on your system:
368 error     node-gyp rebuild
368 error You can get their info via:
368 error     npm owner ls canvas
368 error There is likely additional logging output above.
369 error System Linux 3.16.0-23-generic
370 error command "/home/codio/.nvm/v0.10.25/bin/node" "/home/codio/.nvm/v0.10.25/bin/npm" "install" "-g" "canvas"
371 error cwd /home/codio/workspace/web_ui/tests
372 error node -v v0.10.25
373 error npm -v 1.3.24
374 error code ELIFECYCLE
375 verbose exit [ 1, true ]
